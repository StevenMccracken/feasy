{"version":3,"sources":["../../../../../src/components/week/calendarWeekView.component.ts"],"names":[],"mappings":"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","file":"calendarWeekView.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewEvent,\n  WeekViewEventRow,\n  getWeekViewHeader,\n  getWeekView\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addDays from 'date-fns/add_days';\nimport { CalendarDragHelper } from '../../providers/calendarDragHelper.provider';\nimport { CalendarResizeHelper } from '../../providers/calendarResizeHelper.provider';\nimport { CalendarEventTimesChangedEvent } from '../../interfaces/calendarEventTimesChangedEvent.interface';\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * &lt;mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/mwl-calendar-week-view&gt;\n * ```\n */\n\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n\n  /**\n   * The current view date\n   */\n   viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   */\n   events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n   excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n   refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n   locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n   tooltipPlacement: string = 'bottom';\n\n  /**\n   * The start number of the week\n   */\n   weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n   headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n   eventTemplate: TemplateRef<any>;\n\n  /**\n   * Called when a header week day is clicked\n   */\n   dayClicked: EventEmitter<{date: Date}> = new EventEmitter<{date: Date}>();\n\n  /**\n   * Called when the event title is clicked\n   */\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n   eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  eventRows: WeekViewEventRow[] = [];\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResize: {\n    originalOffset: number,\n    originalSpan: number,\n    edge: string\n  };\n\n  /**\n   * @hidden\n   */\n  validateDrag: Function;\n\n  /**\n   * @hidden\n   */\n  validateResize: Function;\n\n  /**\n   * @hidden\n   */\n  constructor(private cdr: ChangeDetectorRef,  locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.detectChanges();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n\n    if (changes.viewDate || changes.excludeDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events || changes.viewDate || changes.excludeDays) {\n      this.refreshBody();\n    }\n\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeStarted(weekViewContainer: HTMLElement, weekEvent: WeekViewEvent, resizeEvent: ResizeEvent): void {\n    this.currentResize = {\n      originalOffset: weekEvent.offset,\n      originalSpan: weekEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    };\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(weekViewContainer, this.getDayColumnWidth(weekViewContainer));\n    this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * @hidden\n   */\n  resizing(weekEvent: WeekViewEvent, resizeEvent: ResizeEvent, dayWidth: number): void {\n    if (resizeEvent.edges.left) {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      weekEvent.offset = this.currentResize.originalOffset + diff;\n      weekEvent.span = this.currentResize.originalSpan - diff;\n    } else if (resizeEvent.edges.right) {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      weekEvent.span = this.currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeEnded(weekEvent: WeekViewEvent): void {\n\n    let daysDiff: number;\n    if (this.currentResize.edge === 'left') {\n      daysDiff = weekEvent.offset - this.currentResize.originalOffset;\n    } else {\n      daysDiff = weekEvent.span - this.currentResize.originalSpan;\n    }\n\n    weekEvent.offset = this.currentResize.originalOffset;\n    weekEvent.span = this.currentResize.originalSpan;\n\n    let newStart: Date = weekEvent.event.start;\n    let newEnd: Date = weekEvent.event.end;\n    if (this.currentResize.edge === 'left') {\n      newStart = addDays(newStart, daysDiff);\n    } else if (newEnd) {\n      newEnd = addDays(newEnd, daysDiff);\n    }\n\n    this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n    this.currentResize = null;\n\n  }\n\n  /**\n   * @hidden\n   */\n  eventDragged(weekEvent: WeekViewEvent, draggedByPx: number, dayWidth: number): void {\n\n    const daysDragged: number = draggedByPx / dayWidth;\n    const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n    let newEnd: Date;\n    if (weekEvent.event.end) {\n      newEnd = addDays(weekEvent.event.end, daysDragged);\n    }\n\n    this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(weekViewContainer, event);\n    this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\n    this.cdr.detectChanges();\n  }\n\n  private refreshHeader(): void {\n    this.days = getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays\n    });\n  }\n\n  private refreshBody(): void {\n    this.eventRows = getWeekView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays\n    });\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayClicked)=\"dayClicked.emit($event)\"\n        (eventDropped)=\"eventTimesChanged.emit($event)\">\n      </mwl-calendar-week-view-header>\n      <div *ngFor=\"let eventRow of eventRows\" #eventRowContainer>\n        <div\n          class=\"cal-event-container\"\n          #event\n          [class.cal-draggable]=\"weekEvent.event.draggable\"\n          *ngFor=\"let weekEvent of eventRow.row\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\"\n          mwlResizable\n          [resizeEdges]=\"{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}\"\n          [resizeSnapGrid]=\"{left: getDayColumnWidth(eventRowContainer), right: getDayColumnWidth(eventRowContainer)}\"\n          [validateResize]=\"validateResize\"\n          (resizeStart)=\"resizeStarted(weekViewContainer, weekEvent, $event)\"\n          (resizing)=\"resizing(weekEvent, $event, getDayColumnWidth(eventRowContainer))\"\n          (resizeEnd)=\"resizeEnded(weekEvent)\"\n          mwlDraggable\n          [dragAxis]=\"{x: weekEvent.event.draggable && !currentResize, y: false}\"\n          [dragSnapGrid]=\"{x: getDayColumnWidth(eventRowContainer)}\"\n          [validateDrag]=\"validateDrag\"\n          (dragStart)=\"dragStart(weekViewContainer, event)\"\n          (dragEnd)=\"eventDragged(weekEvent, $event.x, getDayColumnWidth(eventRowContainer))\">\n          <mwl-calendar-week-view-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [customTemplate]=\"eventTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: weekEvent.event})\">\n          </mwl-calendar-week-view-event>\n        </div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'excludeDays': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'weekStartsOn': [{ type: Input },],\n'headerTemplate': [{ type: Input },],\n'eventTemplate': [{ type: Input },],\n'dayClicked': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}