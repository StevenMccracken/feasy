{"version":3,"sources":["../../../../../src/components/month/calendarMonthCell.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAA0B,MAAO,eAAA,CAAgB;AAIpF;IAAA;QAYG,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;QAErD,mBAAc,GAAsB,IAAI,YAAY,EAAE,CAAC;QAEvD,iBAAY,GAAyC,IAAI,YAAY,EAA0B,CAAC;IAoEnG,CAAC;IAAD,iCAAC;AAAD,CApFA,AAoFC;;AAlEM,qCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE,w5CAmCT;gBACD,IAAI,EAAE;oBACJ,SAAS,EAAE,0CAA0C;oBACrD,kBAAkB,EAAE,YAAY;oBAChC,mBAAmB,EAAE,aAAa;oBAClC,oBAAoB,EAAE,cAAc;oBACpC,qBAAqB,EAAE,eAAe;oBACtC,sBAAsB,EAAE,aAAa;oBACrC,uBAAuB,EAAE,cAAc;oBACvC,wBAAwB,EAAE,uBAAuB;oBACjD,kBAAkB,EAAE,iBAAiB;oBACrC,yBAAyB,EAAE,qBAAqB;iBACjD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,yCAAc,GAA2C;IAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACnC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACrC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"calendarMonthCell.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\n\n\nexport class CalendarMonthCellComponent {\n\n   day: MonthViewDay;\n\n   openDay: MonthViewDay;\n\n   locale: string;\n\n   tooltipPlacement: string;\n\n   customTemplate: TemplateRef<any>;\n\n   highlightDay: EventEmitter<any> = new EventEmitter();\n\n   unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\n      </div>\n      <div class=\"cal-events\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events\"\n          [style.backgroundColor]=\"event.color.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({event: event})\"\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          mwlDraggable\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\n          (click)=\"$event.stopPropagation(); eventClicked.emit({event: event})\">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `,\n  host: {\n    '[class]': '\"cal-cell cal-day-cell \" + day?.cssClass',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'day': [{ type: Input },],\n'openDay': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'highlightDay': [{ type: Output },],\n'unhighlightDay': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}