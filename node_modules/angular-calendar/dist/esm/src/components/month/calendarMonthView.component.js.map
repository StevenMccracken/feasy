{"version":3,"file":"calendarMonthView.component.js","sourceRoot":"","sources":["../../../../../src/components/month/calendarMonthView.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  getWeekViewHeader,\n  getMonthView,\n  MonthViewDay\n} from 'calendar-utils';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport isSameDay from 'date-fns/is_same_day';\nimport setDate from 'date-fns/set_date';\nimport setMonth from 'date-fns/set_month';\nimport setYear from 'date-fns/set_year';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport getYear from 'date-fns/get_year';\nimport differenceInSeconds from 'date-fns/difference_in_seconds';\nimport addSeconds from 'date-fns/add_seconds';\nimport { CalendarEventTimesChangedEvent } from '../../interfaces/calendarEventTimesChangedEvent.interface';\n\n\nexport class CalendarMonthViewComponent implements OnChanges, OnInit, OnDestroy {\n\n  /**\n   * The current view date\n   */\n   viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   */\n   events: CalendarEvent[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n   activeDayIsOpen: boolean = false;\n\n  /**\n   * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n   * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n   */\n   dayModifier: Function;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n   refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n   locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n   tooltipPlacement: string = 'top';\n\n  /**\n   * The start number of the week\n   */\n   weekStartsOn: number;\n\n  /**\n   * Called when the day cell is clicked\n   */\n   dayClicked: EventEmitter<{day: MonthViewDay}> = new EventEmitter<{day: MonthViewDay}>();\n\n  /**\n   * Called when the event title is clicked\n   */\n   eventClicked: EventEmitter<{event: CalendarEvent}> = new EventEmitter<{event: CalendarEvent}>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n   eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  constructor(private cdr: ChangeDetectorRef,  locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n\n    if (changes.viewDate) {\n      this.refreshHeader();\n    }\n\n    if (changes.viewDate || changes.events) {\n      this.refreshBody();\n    }\n\n    if (changes.activeDayIsOpen || changes.viewDate || changes.events) {\n      this.checkActiveDayIsOpen();\n    }\n\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor = event.color.secondary;\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = getYear(day.date);\n    const month: number = getMonth(day.date);\n    const date: number = getDate(day.date);\n    const newStart: Date = setYear(setMonth(setDate(event.start, date), month), year);\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = differenceInSeconds(newStart, event.start);\n      newEnd = addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({event, newStart, newEnd});\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn\n    });\n  }\n\n  private refreshBody(): void {\n    this.view = getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn\n    });\n    if (this.dayModifier) {\n      this.view.days.forEach(day => this.dayModifier(day));\n    }\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day => isSameDay(day.date, this.viewDate));\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex = Math.floor(index / 7) * 7;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <div class=\"cal-cell-row cal-header\">\n        <div class=\"cal-cell\" *ngFor=\"let header of columnHeaders\">\n          {{ header.date | calendarDate:'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"let day of view.days | slice : rowIndex : rowIndex + 7\"\n              [class.cal-drag-over]=\"day.dragOver\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              (click)=\"dayClicked.emit({day: day})\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              (dragEnter)=\"day.dragOver = true\"\n              (dragLeave)=\"day.dragOver = false\"\n              (drop)=\"day.dragOver = false; eventDropped(day, $event.dropData.event)\"\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'activeDayIsOpen': [{ type: Input },],\n'dayModifier': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPlacement': [{ type: Input },],\n'weekStartsOn': [{ type: Input },],\n'dayClicked': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}